// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  company     String
  position    String
  password    String
  warehouseId String
  roles       Roles[]
  UsersRoles  UsersRoles[]
  warehouse   Warehouse?   @relation(fields: [warehouseId], references: [id])

  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  LogsActivities LogsActivities[]

  @@map("users")
}

model Roles {
  id   String @id @default(uuid())
  name String

  users Users[]

  UsersRoles UsersRoles[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("roles")
}

model UsersRoles {
  id     String @id @default(uuid())
  userId String
  roleId String

  user Users @relation(fields: [userId], references: [id])

  role Roles @relation(fields: [roleId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users_roles")
}

model Warehouse {
  id          String  @id @default(uuid())
  name        String
  description String? @db.Text()

  country         String?
  province        String?
  address         String?
  code            String
  embarcationType String?
  flag            String?
  capacity        Int?
  type            String
  company         String?
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  Pieces          Pieces[]
  Users           Users[]

  Requests      Requests[] @relation("warehouseIncommingRequest")
  RequestsModel Requests[] @relation("warehouseOutcommingRequest")
  Alerts        Alerts[]

  @@map("warehouse")
}

model Pieces {
  id String @id @default(uuid())

  name                String
  description         String @db.Text
  price               Float
  quantity            Int
  state               String
  brand_name          String
  locationInWarehouse String @default("No desc")
  target              Int    @default(0)
  min                 Int    @default(0)
  warehouseId         String
  categoryId          String
  subCategoryId       String
  partNumber          String @default("0")
  supplierId          String @default("01")

  warehouse   Warehouse?     @relation(fields: [warehouseId], references: [id])
  category    Categories?    @relation(fields: [categoryId], references: [id])
  subcategory SubCategories? @relation(fields: [subCategoryId], references: [id])
  supplier    Suppliers?     @relation(fields: [supplierId], references: [id])

  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  OrdersPiece    OrdersPiece[]
  RequestsPieces RequestsPieces[]
  Alerts         Alerts[]

  @@map("pieces")
}

model Categories {
  id String @id @default(uuid())

  name String
  code String

  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  Pieces        Pieces[]
  SubCategories SubCategories[]

  @@map("category")
}

model SubCategories {
  id String @id @default(uuid())

  name       String
  code       String
  categoryId String

  category Categories @relation(fields: [categoryId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Pieces     Pieces[]

  @@map("subcategory")
}

model Transports {
  id String @id @default(uuid())

  name String
  code String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("transports")
}

model Orders {
  id           String        @id @default(uuid())
  description  String
  number_order String        @default("0")
  imbl_awb     String
  reference    String        @default("00")
  state        String        @default("Em curso")
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  OrdersPiece  OrdersPiece[]

  @@map("order")
}

model OrdersPiece {
  pieceId  String
  piece    Pieces @relation(fields: [pieceId], references: [id])
  orderId  String
  Order    Orders @relation(fields: [orderId], references: [id])
  quantity Float
  price    Float

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([pieceId, orderId])
}

model Suppliers {
  id   String @id @default(uuid())
  name String
  code String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Pieces     Pieces[]

  @@map("supplier")
}

model Requests {
  id                    String   @id @default(uuid())
  name                  String   @default("None")
  warehouseIdIncomming  String?
  warehouseIdOutcomming String?
  state                 String
  numberPr              String   @default("0")
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  warehouseIncomming  Warehouse?       @relation(name: "warehouseIncommingRequest", fields: [warehouseIdIncomming], references: [id])
  warehouseOutcomming Warehouse?       @relation(name: "warehouseOutcommingRequest", fields: [warehouseIdOutcomming], references: [id])
  RequestsPieces      RequestsPieces[]

  @@map("requests")
}

model RequestsPieces {
  id               String              @id @default(uuid())
  pieceId          String
  piece            Pieces              @relation(fields: [pieceId], references: [id])
  requestId        String
  request          Requests            @relation(fields: [requestId], references: [id])
  quantity         Int
  quantityGiven    Int?
  created_at       DateTime            @default(now())
  updated_at       DateTime            @default(now()) @updatedAt
  InvoiceReciepmen InvoiceReciepment[]
}

model InvoiceReciepment {
  id              String         @id @default(uuid())
  partNumber      String
  numberSeries    String         @default("0")
  description     String
  number_series   String?
  requestPiecesId String
  request         RequestsPieces @relation(fields: [requestPiecesId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model LogsActivities {
  id String @id @default(uuid())

  userId String
  user   Users  @relation(fields: [userId], references: [id])

  description String

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model Alerts {
  id String @id @default(uuid())

  warehouseId String
  pieceId     String

  warehouse Warehouse @relation(fields: [warehouseId], references: [id])
  piece     Pieces    @relation(fields: [pieceId], references: [id])

  description String

  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}
